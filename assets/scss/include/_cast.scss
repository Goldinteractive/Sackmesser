// ----
// Sass (v3.3.3)
// Compass (v1.0.0.alpha.18)
// ----

@function _length($number, $unit) {
  $strings: 'px' 'cm' 'mm' '%' 'ch' 'pica' 'in' 'em' 'rem' 'pt' 'pc' 'ex' 'vw' 'vh' 'vmin' 'vmax';
  $units:   1px  1cm  1mm  1%  1ch  1pica  1in  1em  1rem  1pt  1pc  1ex  1vw  1vh  1vmin  1vmax;
  $index: index($strings, $unit);

  @if not $index {
    @warn "Unknown unit `#{$unit}`.";
    @return false;
  }

  @return $number * nth($units, $index);
}

@function number($string) {
  // Matrices
  $strings: '0' '1' '2' '3' '4' '5' '6' '7' '8' '9';
  $numbers:  0   1   2   3   4   5   6   7   8   9;

  // Result
  $result: 0;
  $divider: 0;
  $minus: false;

  // Looping through all characters
  @for $i from 1 through str-length($string) {
    $character: str-slice($string, $i, $i);
    $index: index($strings, $character);


    @if $character == '-' {
      $minus: true;
    }

    @else if $character == '.' {
      $divider: 1;
    }

    @else {
      @if not $index {
        $result: if($minus, $result * -1, $result);
        @return _length($result, str-slice($string, $i));
      }

      $number: nth($numbers, $index);

      @if $divider == 0 {
        $result: $result * 10;
      }

      @else {
        // Move the decimal dot to the left
        $divider: $divider * 10;
        $number: $number / $divider;
      }

      $result: $result + $number;
    }
  }

  @return if($minus, $result * -1, $result);
}

sass {
  cast: number("-15");    // -15
  cast: number("-1");     // -1
  cast: number("-.5");    // -.5
  cast: number("-0");     // 0
  cast: number("0");      // 0
  case: number(".10");    // 0.1
  cast: number("1");      // 1
  cast: number("1.5");    // 1.5
  cast: number("10.");    // 10
  cast: number("12.380"); // 12.38
  cast: number("42");     // 42
  cast: number("1337");   // 1337

  cast: number("-10px");  // -10px
  cast: number("20em");   // 20em
  cast: number("30ch");   // 30ch

  cast: number("1fail");  // Error
  cast: number("string"); // Error
}